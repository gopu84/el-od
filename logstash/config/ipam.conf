input {
  azure_event_hubs {
	event_hub_connections => ["Endpoint=sb://sre-uksouth-eh.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=Vo3mY0w34krj83oHE2qt6n8db/rTS/Xcb593knHjXrQ=;EntityPath=sre-ipam-eh"]
	threads => 8
    decorate_events => true
    consumer_group => "$Default"
    tags => ["ipam"]
    type => "ipam"
    codec => "json"
    storage_connection => "DefaultEndpointsProtocol=https;AccountName=sqlvacia4dog5wjsd6;AccountKey=z2svqfS4rGKjJyCuyEZGK7nx89VWLtYiCYkEehvHENzYSuMgVWfA/+QHUGEBa0/RUNT047qNQ1dlPTMgrg8R5w==;EndpointSuffix=core.windows.net"
  }
}
input {
  azureblob {
	storage_account_name => "sreelkuk01"
    storage_access_key => "AhOZqaJPUHMr+V1yx5faRDCHQQoiW5vl98zPnLfmGDI+bjYkLXbUsYUfC53VUMi6alo/+2VOX7solT2Q3dQpnw=="
    container => "ipam"
    type => "ipam_ai"
	codec => "json"
  }
}
	
filter{
  if [type] == 'ipam' {
	  split { field => "[records]" }
			  
	mutate {
	  split => { "[records][resourceId]" => "/"}
	  add_field => {"Subscription" => "%{[records][resourceId][2]}"
					"ResourceGroup" => "%{[records][resourceId][4]}"
					"Resource" => "%{[records][resourceId][8]}"}
	  convert => {"Subscription" => "string"}
	  convert => {"ResourceGroup" => "string"}
	  convert => {"Resource" => "string"}
	  add_tag => ["ipam"]
	  remove_field => ["[records][resourceId]"]
	}
  }
  if [type] == 'ipam_ai' {
	if [availability] {
	  split { field => "[availability]" }
	  date {
		match => ["[availability][testTimestamp]", "ISO8601"]
		target => "@timestamp"
		locale => "en"
	  }
	  mutate{
		remove_field => ["headers"]
		remove_field => ["tags"]
		add_tag => ["ipamavailability"]
	  }
	  prune {
		blacklist_names => [ "^context" ]
	  }
	}
	else if [request] {
	  split { field => "[request]" }
	  date {
		match => ["[context][data][eventTime]", "ISO8601"]
		target => "@timestamp"
		locale => "en"
	  }
	  date {
		match => ["[context][data][eventTime]", "ISO8601"]
		target => "request.timestamp"
		locale => "en"
	  }
	  mutate{
		remove_field => ["headers"]
		remove_field => ["tags"]
		add_tag => ["ipamrequest"]
	  }
	  prune {
		blacklist_names => [ "^context" ]
	  }
	}
  }
}

output {
  if [type] == 'ipam'{
	elasticsearch {
	  hosts => ["${ES_URL}"]
	  ssl => true
	  cacert => "/usr/share/logstash/config/es-client/es-client-root-ca.pem"
	  manage_template => false
	  index => "ipam-diag-%{+YYYY.MM.dd}"
	  ilm_enabled => false
	  user => "${LS_USERNAME}"
	  password => "${LS_PASSWORD}"
	}
  }
  else if [type] == "ipam_ai"{ 
	elasticsearch {
	  hosts => ["${ES_URL}"]
	  ssl => true
	  cacert => "/usr/share/logstash/config/es-client/es-client-root-ca.pem"
	  manage_template => true
	  index => "ipam-ai-%{+YYYY.MM.dd}"
	  ilm_enabled => false
	  user => "${LS_USERNAME}"
	  password => "${LS_PASSWORD}"
	}
  }
}