input {
  azure_event_hubs {
	event_hub_connections => ["Endpoint=sb://sre-cdsapi-eh.servicebus.windows.net/;SharedAccessKeyName=sre-cdsapi-ehpolicy;SharedAccessKey=HeY9YA4QEEILnP3mZjNm0w8Q1ZXyhgohHIePJXYk7ls=;EntityPath=sre-cdsapi-eh"]
	threads => 8
	decorate_events => true
	consumer_group => "$Default"
	type => "azurecdsapi"
	codec => "json"
	storage_connection => "DefaultEndpointsProtocol=https;AccountName=sreelknortheurope01;AccountKey=f2pyTyGoWH8cYSPdpTuXvFw3V7AlmUWGOwxBw6Kjd7KcdEcksTamZCheWOeU+meKXFnCjx8jQTfLBGB9hNYPSw==;EndpointSuffix=core.windows.net"
	
  }
}

input {
  azureblob {
 	storage_account_name => "sreelknortheurope01"
 	storage_access_key => "f2pyTyGoWH8cYSPdpTuXvFw3V7AlmUWGOwxBw6Kjd7KcdEcksTamZCheWOeU+meKXFnCjx8jQTfLBGB9hNYPSw=="
 	container => "cdsapi"
 	type => "cds_azure_blob"
	codec => "json" 
  }
}
	
filter{
  if [type] == 'azurecdsapi' {
	  split { field => "[records]" }
	mutate {
	  split => { "[records][resourceId]" => "/"}
	  add_field => {"Subscription" => "%{[records][resourceId][2]}"
					"ResourceGroup" => "%{[records][resourceId][4]}"
					"Resource" => "%{[records][resourceId][8]}"}
	  convert => {"Subscription" => "string"}
	  convert => {"ResourceGroup" => "string"}
	  convert => {"Resource" => "string"}
	  add_tag => ["cdsapidiag"]
	}
  }
  if [type] == 'cds_azure_blob' {
	if [availability] {
	  split { field => "[availability]" }
	  date {
        match => ["[availability][testTimestamp]", "ISO8601"]
        target => "@timestamp"
        locale => "en"
      }
	  mutate{
		remove_field => ["headers"]
		remove_field => ["tags"]
		add_tag => ["cdsapiavailability"]
	  }
	  prune {
		blacklist_names => [ "^context" ]
	  }
	}
	else if [request] {
	  split { field => "[request]" }
	  date {
        match => ["[context][data][eventTime]", "ISO8601"]
        target => "@timestamp"
        locale => "en"
      }
	  date {
		match => ["[context][data][eventTime]", "ISO8601"]
		target => "request.timestamp"
		locale => "en"
	  }
	  mutate{
		remove_field => ["headers"]
		remove_field => ["tags"]
		add_tag => ["cdsapirequests"]
	  }
	  prune {
		blacklist_names => [ "^context" ]
	  }
	}
  }
}

output {
  if [type] == 'azurecdsapi'{
	elasticsearch {
	  hosts => ["${ES_URL}"]
	  ssl => true
	  cacert => "/usr/share/logstash/config/es-client/es-client-root-ca.pem"
	  manage_template => false
	  index => "cdsapi-diag-%{+YYYY.MM.dd}"
	  ilm_enabled => false
	  user => "${LS_USERNAME}"
	  password => "${LS_PASSWORD}"
	}
  }
  else if [type] == "cds_azure_blob"{
	elasticsearch {
	  hosts => ["${ES_URL}"]
	  ssl => true
	  cacert => "/usr/share/logstash/config/es-client/es-client-root-ca.pem"
	  manage_template => true
	  index => "cdsapi-ai-%{+YYYY.MM.dd}"
	  ilm_enabled => false
	  user => "${LS_USERNAME}"
	  password => "${LS_PASSWORD}"
	}
  }
  else if "cdsapi" in [tags] {
	elasticsearch {
	  hosts => ["${ES_URL}"]
	  ssl => true
	  cacert => "/usr/share/logstash/config/es-client/es-client-root-ca.pem"
	  manage_template => false
	  index => "cdsapi-http-%{+YYYY.MM.dd}"
	  ilm_enabled => false
	  user => "${LS_USERNAME}"
	  password => "${LS_PASSWORD}"
	}        
  }
}