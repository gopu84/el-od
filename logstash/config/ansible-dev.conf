input {
  beats {
	port => 5044
	type => "dev"
	ssl => true
	ssl_certificate_authorities => ["/usr/share/logstash/config/cert/ca.crt"]
	ssl_certificate => "/usr/share/logstash/config/cert/logstash.crt"
	ssl_key => "/usr/share/logstash/config/cert/logstash.key"
	ssl_verify_mode => "force_peer"
  }
}
input {
  http {
	port => 8081
	type => "tower_dev"
	user => "${LS_USERNAME}"
	password => "${LS_PASSWORD}"
	ssl => true
	ssl_certificate => "/usr/share/logstash/config/cert/logstash.crt"
	ssl_key => "/usr/share/logstash/config/cert/logstash.key"
	ssl_verify_mode => "none"
  }
}

filter{
  if [type] == 'tower_dev' {
    json {
      source => "[message]"
    }
    prune {
      whitelist_names => [ "^tags$", "^logger_name$", "^created$", "^job$", "^failed$", "^task$", "^cluster_host_id$", "^stdout$", "^playbook$", "^role$", "^level$", "^message$", "^event_display$", "^\@timestamp$" ]
    }
	mutate {
	  remove_field => ["headers"]
	  add_tag => ["ansible-dev"]
	}
  }
  if [agent][name] == "filebeat" and [type] == 'dev' {
    grok {
      match => [ "message", "%{IPORHOST:clientip} (?:-|(%{WORD}.%{WORD})) %{USER:ident} \[%{HTTPDATE:timestamp}\] (?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest}) %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} %{QS:forwarder}" ]
    }
	mutate {
	  remove_field => ["[host][architecture]", "[host][os]", "[host][mac]", "[host][id]", "[message]"]
	  add_tag => ["beatdev"]
	}
  }
  else if [type] == 'dev' {
	mutate {
	  add_tag => ["beatdev"]
	}
  }
}

output {
  if "ansible-dev" in [tags] {
	elasticsearch {
	  hosts => ["${ES_URL}"]
	  ssl => true
	  cacert => "/usr/share/logstash/config/es-client/es-client-root-ca.pem"
	  manage_template => false
	  index => "ansibledevjobs-%{+YYYY.MM.dd}"
	  ilm_enabled => false
	  user => "${LS_USERNAME}"
	  password => "${LS_PASSWORD}"
	}
  }
  else if "beatdev" in [tags]  {
	elasticsearch {
	  hosts => ["${ES_URL}"]
	  ssl => true
	  cacert => "/usr/share/logstash/config/es-client/es-client-root-ca.pem"
	  manage_template => false
	  index => "ansibledev-%{[@metadata][beat]}-%{+YYYY.MM.dd}"
	  ilm_enabled => false
	  user => "${LS_USERNAME}"
	  password => "${LS_PASSWORD}"
	}
  }
}
